#!/bin/sh
#
# Run a .ll file through the LLVM backend
#

if [ -x /usr/bin/llc ]
then
  LLVM=/usr/bin
elif [ -x /bin/llc ]
then
  LLVM=/bin
elif [ -x /usr/local/opt/llvm/bin/llc ]
then
  LLVM=/usr/local/opt/llvm/bin
elif [ -x /usr/local/bin/llc ]
then
  LLVM=/usr/local/bin
elif [ -x $HOME/bin/llc ]
then
  LLVM=$HOME/bin/llc
else
   echo "Can't find LLVM executable llc in /bin or /usr/bin or /usr/local/bin or /usr/local/opt/llvm/bin!"
   echo "If it is somewhere else, fix the script 'llvm'."
   exit 1
fi
DEBUG=
ARCH=
INLINE=
OPT=-O3		#default
TRIPLE=
OPTS=""
while getopts "Im:O:Vp" flags
do
  case $flags in
    I) INLINE="-disable-inlining" ;; 	# disable inlining
    m) ARCH=$OPTARG ;;
    O) OPT="-O$OPTARG" ;;
    p) OPTS="$OPTS --relocation-model=pic" ;;
    V) $LLVM/llc --version | sed -n -e 's/.*LLVM version \([0-9.]*\).*/\1/p'; exit 0 ;;
    *) echo "bad flag"; exit 1 ;;
  esac
done
if [ x"$ARCH" = "x" ]
then	# target same as host
  ARCH=`uname -m`
fi
case $ARCH in
    i686)   ARCH=x86;;
    x86_64) ARCH=x86-64;;
    s390x)  ARCH=systemz;;
    armv7l) ARCH=arm; CPU="-mcpu=cortex-a7"
	    ATTR="-mattr=-neon,-vfp4,+vfp3,+d16";;
esac
case `uname -s` in
  Darwin)
    TRIPLE="-mtriple=x86_64-apple-darwin" ;;
esac
shift $(($OPTIND-1))
file=$1
j=`basename $file .ll`
$LLVM/opt ${OPT} ${INLINE} -o - $file | \
$LLVM/llc ${DEBUG} -march=${ARCH} ${TRIPLE} ${CPU} ${ATTR} ${OPT} ${OPTS} -asm-verbose=0 -o ${j}.s

